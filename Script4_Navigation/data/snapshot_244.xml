<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="244">
  <HTTPTask id="1073" hostname="10.100.22.243:8081" path="/case/split/244461" url="http://10.100.22.243:8081/case/split/244461" ip="10.100.22.243" port="8081" connectionId="65" origin="Primary" frame="1" startDateTime="2020-08-26T19:20:59.258+05:30" startTime="7554671" endTime="7561593">
    <HTTPRequest method="POST">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTAuMTAwLjIyLjI0Mzo4MDgx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjEy</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-CSRF-TOKEN" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>N2MzMjFlMzAtMDQ0NC00NjkzLTg5MGQtYzVlNjJmOGYzNmU4</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Requested-With" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>WE1MSHR0cFJlcXVlc3Q=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzg0LjAuNDE0Ny4xMzUgU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Origin" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovLzEwLjEwMC4yMi4yNDM6ODA4MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovLzEwLjEwMC4yMi4yNDM6ODA4MS9pbnRha2UvcXVldWU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0VTU0lPTj1lZmE4YzQ4ZC0zMTk5LTRkZDgtOTg1Mi1lNWRiOTVlYTY4NzM7IEF1dGhUeXBlPURhdGFiYXNl</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>UE9TVCAvY2FzZS9zcGxpdC8yNDQ0NjEgSFRUUC8xLjENCkhvc3Q6IDEwLjEwMC4yMi4yNDM6ODA4MQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KQ29udGVudC1MZW5ndGg6IDIxMg0KQWNjZXB0OiAqLyoNClgtQ1NSRi1UT0tFTjogN2MzMjFlMzAtMDQ0NC00NjkzLTg5MGQtYzVlNjJmOGYzNmU4DQpYLVJlcXVlc3RlZC1XaXRoOiBYTUxIdHRwUmVxdWVzdA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzg0LjAuNDE0Ny4xMzUgU2FmYXJpLzUzNy4zNg0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9VVRGLTgNCk9yaWdpbjogaHR0cDovLzEwLjEwMC4yMi4yNDM6ODA4MQ0KUmVmZXJlcjogaHR0cDovLzEwLjEwMC4yMi4yNDM6ODA4MS9pbnRha2UvcXVldWUNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1VUyxlbjtxPTAuOQ0KQ29va2llOiBTRVNTSU9OPWVmYThjNDhkLTMxOTktNGRkOC05ODUyLWU1ZGI5NWVhNjg3MzsgQXV0aFR5cGU9RGF0YWJhc2UNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="SESSION" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZWZhOGM0OGQtMzE5OS00ZGQ4LTk4NTItZTVkYjk1ZWE2ODcz</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="AuthType" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RGF0YWJhc2U=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZGF0YT0lN0IlMjJleGlzdGluZzI0NDQ2MSUyMiUzQSU1QiUyMjg2OTEyJTIyJTVEJTJDJTIybmV3Q2FzZUNvdW50JTIyJTNBNCUyQyUyMmNhc2VJZCUyMiUzQSUyMjI0NDQ2MSUyMiUyQyUyMnJvdzAlMjIlM0FudWxsJTJDJTIycm93MSUyMiUzQSU1QiUyMjg2OTEyJTIyJTVEJTJDJTIycm93MiUyMiUzQSU1QiUyMjg2OTEyJTIyJTVEJTJDJTIycm93MyUyMiUzQW51bGwlN0Q=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="X-Frame-Options" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>REVOWQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Application-Context" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb246cHJvZHVjdGlvbjo4MDgx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Transfer-Encoding" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2h1bmtlZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Vary" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>V2VkLCAyNiBBdWcgMjAyMCAxMzo0NDo1OSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KWC1GcmFtZS1PcHRpb25zOiBERU5ZDQpYLUFwcGxpY2F0aW9uLUNvbnRleHQ6IGFwcGxpY2F0aW9uOnByb2R1Y3Rpb246ODA4MQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7Y2hhcnNldD11dGYtOA0KVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWQNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KRGF0ZTogV2VkLCAyNiBBdWcgMjAyMCAxMzo0NDo1OSBHTVQNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="7561578" offset="0" length="4096" />
        <PacketInfo time="7561593" offset="4096" length="12090" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>